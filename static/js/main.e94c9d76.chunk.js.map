{"version":3,"sources":["Api.js","components/User/User.js","components/TodoItem/TodoItem.js","components/todoTable/TodoTable.js","App.js","index.js"],"names":["baseURL","getResponse","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","_x","apply","this","arguments","getUsers","_ref2","_callee2","_context2","concat","getTodos","_ref3","_callee3","_context3","User","name","react_default","createElement","TodoItem","title","user","isCompleted","components_User_User","Table","Cell","positive","Icon","negative","TodoTable","getTodosWithUser","todos","users","map","todo","_objectSpread","find","id","userId","_this$props","props","todosWithUser","celled","Header","Row","HeaderCell","Body","components_TodoItem_TodoItem","key","completed","React","PureComponent","App","state","isLoading","successfulLoading","wasLoaded","downloadInfoFromServer","serverTodos","serverUsers","_this","setState","Promise","all","catch","slicedToArray","_this$state","console","log","Button","secondary","loading","todoTable_TodoTable","Fragment","onClick","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e94c9d76.chunk.js","sourcesContent":["const baseURL = 'https://jsonplaceholder.typicode.com';\n\nconst getResponse = async (url) => {\n  const response = await fetch(url);\n\n  return response.json();\n};\n\nexport const getUsers = async () => {\n  return await getResponse(`${baseURL}/users`);\n};\n\nexport const getTodos = async () => {\n  return await getResponse(`${baseURL}/todos`);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ name }) => <td>{name}</td>;\n\nUser.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport { Icon, Table } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport User from '../User/User';\n\nconst TodoItem = ({ title, user, isCompleted }) => (\n  <tr>\n    <td>{title}</td>\n    <User name={user.name} />\n    {isCompleted ? (\n      <Table.Cell positive>\n        <Icon name=\"checkmark\" />\n        Completed\n      </Table.Cell>\n    ) : (\n      <Table.Cell negative>\n        <Icon name=\"close\" />\n        In procces\n      </Table.Cell>\n    )}\n  </tr>\n);\n\nTodoItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  isCompleted: PropTypes.bool.isRequired,\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport TodoItem from '../TodoItem/TodoItem';\n\nclass TodoTable  extends React.PureComponent {\n\n  getTodosWithUser = (todos, users) => {\n    return todos.map(todo => ({\n      ...todo,\n      user: users.find(user => user.id === todo.userId),\n    }));\n  };\n\n  render() {\n    const {todos, users} = this.props;\n    const todosWithUser = this.getTodosWithUser(todos, users);\n\n    return (\n      <Table celled>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Todo item</Table.HeaderCell>\n            <Table.HeaderCell>User email</Table.HeaderCell>\n            <Table.HeaderCell>Is completed</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {todosWithUser.map(todo => (\n            <TodoItem\n              key={todo.id}\n              title={todo.title}\n              isCompleted={todo.completed}\n              user={todo.user}\n            />\n          ))}\n        </Table.Body>\n      </Table>\n    );\n  }\n}\n\nexport default TodoTable;\n","import React from 'react';\nimport './App.css';\nimport { Button } from 'semantic-ui-react';\nimport { getUsers, getTodos } from './Api';\nimport TodoTable from './components/todoTable/TodoTable';\n\nclass App extends React.PureComponent {\n  state = {\n    todos: [],\n    users: [],\n    isLoading: false,\n    successfulLoading: false,\n    wasLoaded: false,\n  };\n\n  downloadInfoFromServer = async () => {\n    this.setState({\n      isLoading: true,\n      wasLoaded: true,\n    });\n\n    const [serverTodos, serverUsers] = await Promise.all([getTodos(), getUsers()])\n      .catch(() => {\n        this.setState({ isLoading: false });\n      });\n\n    this.setState({\n      todos: serverTodos,\n      users: serverUsers,\n      isLoading: false,\n      successfulLoading: true,\n    });\n  };\n\n  render() {\n    const { todos, users, isLoading, successfulLoading, wasLoaded } = this.state;\n    console.log(this.state);\n\n    if (isLoading) {\n      return (\n        <Button secondary loading>\n          Loading\n        </Button>\n      );\n    } else if (!successfulLoading && !wasLoaded) {\n      return (\n        <Button secondary onClick={this.downloadInfoFromServer}>\n          Load info from server\n        </Button>\n      );\n    }\n\n    if (successfulLoading) {\n      return <TodoTable todos={todos} users={users} />;\n    } else if (!successfulLoading && wasLoaded) {\n      return (\n        <>\n          <h3>Loading error</h3>\n          <Button secondary onClick={this.downloadInfoFromServer}>\n            Try again\n          </Button>\n        </>\n      );\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}