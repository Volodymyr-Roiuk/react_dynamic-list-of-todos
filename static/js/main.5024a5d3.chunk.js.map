{"version":3,"sources":["Api.js","components/User/User.js","components/TodoItem/TodoItem.js","components/todoTable/TodoTable.js","App.js","index.js"],"names":["baseURL","getResponse","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","_x","apply","this","arguments","getUsers","_ref2","_callee2","_context2","concat","getTodos","_ref3","_callee3","_context3","User","name","react_default","createElement","TodoItem","title","user","isCompleted","components_User_User","Table","Cell","positive","Icon","negative","TodoTable","state","todosWithUser","getTodosWithUser","todos","users","map","todo","_objectSpread","find","id","userId","sortTodosByFilter","filter","_this","setState","prevState","newTodoList","toConsumableArray","sort","b","localeCompare","completed","_this$props","props","Fragment","className","Button","secondary","onClick","bind","celled","Header","Row","HeaderCell","Body","components_TodoItem_TodoItem","key","React","PureComponent","App","isLoading","successfulLoading","wasLoaded","downloadInfoFromServer","serverTodos","serverUsers","Promise","all","catch","slicedToArray","_this$state","loading","todoTable_TodoTable","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5024a5d3.chunk.js","sourcesContent":["const baseURL = 'https://jsonplaceholder.typicode.com';\n\nconst getResponse = async (url) => {\n  const response = await fetch(url);\n\n  return response.json();\n};\n\nexport const getUsers = async () => {\n  return await getResponse(`${baseURL}/users`);\n};\n\nexport const getTodos = async () => {\n  return await getResponse(`${baseURL}/todos`);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ name }) => <td>{name}</td>;\n\nUser.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport { Icon, Table } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport User from '../User/User';\n\nconst TodoItem = ({ title, user, isCompleted }) => (\n  <tr>\n    <td>{title}</td>\n    <User name={user.name} />\n    {isCompleted ? (\n      <Table.Cell positive>\n        <Icon name=\"checkmark\" />\n        Completed\n      </Table.Cell>\n    ) : (\n      <Table.Cell negative>\n        <Icon name=\"close\" />\n        In procces\n      </Table.Cell>\n    )}\n  </tr>\n);\n\nTodoItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  isCompleted: PropTypes.bool.isRequired,\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport {Button, Table} from 'semantic-ui-react';\nimport TodoItem from '../TodoItem/TodoItem';\n\nclass TodoTable extends React.PureComponent {\n  state = {\n    todosWithUser: [],\n  };\n\n  componentDidMount() {\n    const {todos, users} = this.props;\n    this.setState({\n      todosWithUser: this.getTodosWithUser(todos, users),\n    });\n  }\n\n  getTodosWithUser = (todos, users) => {\n    return todos.map(todo => ({\n      ...todo,\n      user: users.find(user => user.id === todo.userId),\n    }));\n  };\n\n  sortTodosByFilter = (filter) => {\n    this.setState((prevState) => {\n      const newTodoList = [...prevState.todosWithUser];\n\n      if (filter === 'title') {\n        newTodoList.sort((a, b) => a.title.localeCompare(b.title));\n      } else if (filter === 'userName') {\n        newTodoList.sort((a, b) => a.user.name.localeCompare(b.user.name));\n      } else if (filter === 'completed') {\n        newTodoList.sort((a, b) => b.completed - a.completed);\n      }\n\n      return ({\n        todosWithUser: newTodoList,\n      });\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <section className=\"sortButtonsContainer\">\n          <Button secondary onClick={this.sortTodosByFilter.bind(this, 'title')}>Sort by title</Button>\n          <Button secondary onClick={this.sortTodosByFilter.bind(this, 'userName')}>Sort by user name</Button>\n          <Button secondary onClick={this.sortTodosByFilter.bind(this, 'completed')}>Sort by completed</Button>\n        </section>\n        <Table celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>Todo item</Table.HeaderCell>\n              <Table.HeaderCell>User name</Table.HeaderCell>\n              <Table.HeaderCell>Is completed</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {this.state.todosWithUser.map(todo => (\n              <TodoItem\n                key={todo.id}\n                title={todo.title}\n                isCompleted={todo.completed}\n                user={todo.user}\n              />\n            ))}\n          </Table.Body>\n        </Table>\n      </>\n    );\n  }\n}\n\nexport default TodoTable;\n","import React from 'react';\nimport './App.css';\nimport { Button } from 'semantic-ui-react';\nimport { getUsers, getTodos } from './Api';\nimport TodoTable from './components/todoTable/TodoTable';\n\nclass App extends React.PureComponent {\n  state = {\n    todos: [],\n    users: [],\n    isLoading: false,\n    successfulLoading: false,\n    wasLoaded: false,\n  };\n\n  downloadInfoFromServer = async () => {\n    this.setState({\n      isLoading: true,\n      wasLoaded: true,\n    });\n\n    const [serverTodos, serverUsers] = await Promise.all([getTodos(), getUsers()])\n      .catch(() => {\n        this.setState({ isLoading: false });\n      });\n\n    this.setState({\n      todos: serverTodos,\n      users: serverUsers,\n      isLoading: false,\n      successfulLoading: true,\n    });\n  };\n\n  render() {\n    const { todos, users, isLoading, successfulLoading, wasLoaded } = this.state;\n\n    if (isLoading) {\n      return (\n        <Button secondary loading>\n          Loading\n        </Button>\n      );\n    } else if (!successfulLoading && !wasLoaded) {\n      return (\n        <Button secondary onClick={this.downloadInfoFromServer}>\n          Load info from server\n        </Button>\n      );\n    }\n\n    if (successfulLoading) {\n      return <TodoTable todos={todos} users={users} />;\n    } else if (!successfulLoading && wasLoaded) {\n      return (\n        <>\n          <h3>Loading error</h3>\n          <Button secondary onClick={this.downloadInfoFromServer}>\n            Try again\n          </Button>\n        </>\n      );\n    }\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}